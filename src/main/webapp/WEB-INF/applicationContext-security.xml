<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 不要过滤图片等静态资源 -->
    <http pattern="/**/*.jpg" security="none"/>
    <http pattern="/**/*.png" security="none"/>
    <http pattern="/**/*.gif" security="none"/>
    <http pattern="/**/*.css" security="none"/>
    <http pattern="/**/*.js" security="none"/>
    <http pattern="/login.html" security="none"/>
	<http auto-config="true" access-denied-page="/accessDenied.jsp">
		<!-- 登录页面和忘记密码页面不过滤  -->
		<intercept-url pattern="/login.html"/>
	
		<form-login login-page="/login.html"
			authentication-failure-url="/login.jsp?error=true"
			default-target-url="/index.jsp" />

		<!-- "记住我"功能，采用持久化策略（将用户的登录信息存放在数据库表中） -->
		<remember-me data-source-ref="dataSource" />
		
		<!-- 检测失效的sessionId,超时时定位到另外一个URL -->
		<session-management invalid-session-url="/sessionTimeout.jsp" />
		
		<!-- 增加一个自定义的filter，放在FILTER_SECURITY_INTERCEPTOR之前，
		实现用户、角色、权限、资源的数据库管理。 11/3/23 -->
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/> 
		
	</http>
	
	
	<!-- 一个自定义的filter，必须包含authenticationManager,
		accessDecisionManager,securityMetadataSource三个属性。 11/3/23  -->
	<b:bean id="myFilter"  class="security.MyFilterSecurityInterceptor">
		<b:property name="authenticationManager"  ref="authenticationManager"/>
		<b:property name="accessDecisionManager"  ref="accessDecisionManager"/>
		<b:property name="securityMetadataSource"  ref="securityMetadataSource"/>
	</b:bean>
	

	<!-- 注意能够为authentication-manager 设置alias别名  -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsManager">
		</authentication-provider>
	</authentication-manager>


	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源。11/3/23 -->

</b:beans>